rollout_type: ssd_ofa

## ---- Component search_space ----
# ---- Type ofa ----
search_space_type: ssd_ofa
search_space_cfg:
  num_cell_groups: [1, 4, 4, 4, 4, 4]
  expansions: [1, 6, 6, 6, 6, 6]
  image_size_choice: [300]
  num_head: 4
  head_width_choice: [0.5]
  schedule_cfg:
    width_choice:
      type: value
      boundary: [1, 60, 120]
      value: [[6], [6,5,4], [6,5,4,3,2]]
    depth_choice:
      type: value
      boundary: [1, 180, 240]
      value: [[4], [4,3], [4,3,2]]
# ---- End Type mnsanet_ofa ----
## ---- End Component search_space ----

## ---- Component dataset ----
# ---- Type cifar10 ----
dataset_type: coco
dataset_cfg:
  load_train_only: false
  random_choose: false
  random_seed: 123
  train_crop_size: 300
  test_crop_size: 300
  image_mean: 0.
  image_std: 1.
  image_norm_factor: 128.
  image_bias: -1
  # image_mean: [123, 116, 103]
  # image_std: 1.
  # image_norm_factor: 1.
  # image_bias: 0.
# ---- End Type cifar10 ----
## ---- End Component dataset ----

objective_type: detection
objective_cfg:
  # Schedulable attributes:
  num_classes: 90
  anchors_generator_type: ssd_anchors_generator
  anchors_generator_cfg:
    aspect_ratios: [[2], [2, 3], [2, 3], [2, 3], [2], [2]]
    clip: true
  matcher_type: iou_matcher
  matcher_cfg:
    matched_threshold: 0.5
    unmatched_threshold: 0.4
    variance: [0.1, 0.2]
  loss_type: focal_loss
  loss_cfg:
    alpha: 0.25
    gamma: 2.0
    loc_coef: 1.
  post_processing_type: ssd_post_processing
  post_processing_cfg:
    top_k: 200
    confidence_threshold: 0.01
    nms_threshold: 0.5
    variance: [0.1, 0.2]
    apply_prob_type: "sigmoid"
  metrics_type: coco
  # latency_coeff: 1.0
#   latency_file: latency_block.txt

final_model_type: ssd_final_model
final_model_cfg:
  num_classes: 90
  genotypes: "image_size=300, cell_0=1,cell_1=4,cell_2=4,cell_3=4,cell_4=4,cell_5=4, cell_0_block_0=(1, 3),cell_1_block_0=(6, 7),cell_1_block_1=(6, 7),cell_1_block_2=(6, 7), cell_1_block_3=(6, 7), cell_2_block_0=(6, 7),cell_2_block_1=(6, 7),cell_2_block_2=(6, 7),cell_2_block_3=(6, 7),cell_3_block_0=(6, 7),cell_3_block_1=(6, 7),cell_3_block_2=(6, 7),cell_3_block_3=(6, 7),cell_4_block_0=(6, 7),cell_4_block_1=(6, 7),cell_4_block_2=(6, 7),cell_4_block_3=(6, 7),cell_5_block_0=(6, 7),cell_5_block_1=(6, 7),cell_5_block_2=(6, 7),cell_5_block_3=(6, 7), head_0=(0.5, 3), head_1=(0.5, 3), head_2=(0.5, 3), head_3=(0.5, 3)"
  backbone_type: ofa_final_model
  backbone_cfg:
    backbone_type: mbv3_backbone
    backbone_cfg:
      layer_channels: [16, 16, 24, 40, 80, 112, 160, 960, 1280]
      strides: [1, 2, 2, 2, 1, 2]
      mult_ratio: 1.
      kernel_sizes: [3, 5, 7]
      pretrained_path: null
  head_type: ssd_header
  head_cfg:
    expansions: [0.5, 0.5, 0.5, 0.5]
    channels: [512, 256, 256, 128]
    kernel_sizes: [3]
    aspect_ratios: [[2], [2, 3], [2, 3], [2, 3], [2], [2]]
    pretrained_path: null
  supernet_state_dict: null


final_trainer_type: det_final_trainer
final_trainer_cfg:
  batch_size: 32
  epochs: 200
  optimizer_scheduler:
    eta_min: 0.0
    T_max: 200
    type: CosineAnnealingLR
  schedule_cfg: null
  weight_decay: 0.0001
  learning_rate: 0.001
  momentum: 0.9
  freeze_base_net: false
  base_net_lr: 0.0005
  save_as_state_dict: true
  eval_every: 10
